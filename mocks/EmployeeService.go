// Code generated by mockery v2.7.5. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	models "github.com/subodhqss/test-api/models"

	otp "github.com/pquerna/otp"
)

// EmployeeService is an autogenerated mock type for the EmployeeService type
type EmployeeService struct {
	mock.Mock
}

// AddEmployee provides a mock function with given fields: emp
func (_m *EmployeeService) AddEmployee(emp *models.Employee) (*models.Employee, error) {
	ret := _m.Called(emp)

	var r0 *models.Employee
	if rf, ok := ret.Get(0).(func(*models.Employee) *models.Employee); ok {
		r0 = rf(emp)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.Employee)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*models.Employee) error); ok {
		r1 = rf(emp)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetEmployeeById provides a mock function with given fields: empNo
func (_m *EmployeeService) GetEmployeeById(empNo string) (*models.Employee, error) {
	ret := _m.Called(empNo)

	var r0 *models.Employee
	if rf, ok := ret.Get(0).(func(string) *models.Employee); ok {
		r0 = rf(empNo)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.Employee)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(empNo)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetEmployeeInOffice provides a mock function with given fields: officeCode
func (_m *EmployeeService) GetEmployeeInOffice(officeCode string) (*models.Offices, error) {
	ret := _m.Called(officeCode)

	var r0 *models.Offices
	if rf, ok := ret.Get(0).(func(string) *models.Offices); ok {
		r0 = rf(officeCode)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.Offices)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(officeCode)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetEmployees provides a mock function with given fields:
func (_m *EmployeeService) GetEmployees() ([]*models.Employee, error) {
	ret := _m.Called()

	var r0 []*models.Employee
	if rf, ok := ret.Get(0).(func() []*models.Employee); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*models.Employee)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetQRCodeImage provides a mock function with given fields:
func (_m *EmployeeService) GetQRCodeImage() (*models.QRCode, error) {
	ret := _m.Called()

	var r0 *models.QRCode
	if rf, ok := ret.Get(0).(func() *models.QRCode); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.QRCode)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetTOTPKey provides a mock function with given fields:
func (_m *EmployeeService) GetTOTPKey() (*otp.Key, error) {
	ret := _m.Called()

	var r0 *otp.Key
	if rf, ok := ret.Get(0).(func() *otp.Key); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*otp.Key)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
